/* Generated by re2c 1.0.3 on Tue May 22 21:26:06 2018 */
#line 1 "split.re"
/* Compile with: re2c split.re > split.h */

#line 7 "split.re"


/**
 @param s: Modified-UTF-8 string.
 @return The first non-classic-whitespace in {s} or a pointer to the
 terminating null if there is no non-whitespace. */
static const char *trim(const char *const s) {
	const char *t = s;
    
#line 16 "<stdout>"
{
	char yych;
	yych = *t;
	switch (yych) {
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case ' ':	goto yy4;
	default:	goto yy2;
	}
yy2:
	++t;
#line 17 "split.re"
	{ return s; }
#line 33 "<stdout>"
yy4:
	yych = *++t;
	switch (yych) {
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case ' ':	goto yy4;
	default:	goto yy6;
	}
yy6:
#line 18 "split.re"
	{ return t; }
#line 48 "<stdout>"
}
#line 19 "split.re"

}

/**
 @param s: Modified-UTF-8 string.
 @return A pointer to the end of the next classic-whitespace delimited word
 in {s} or a null pointer if {s} does not begin at a word. */
static const char *next(const char *const s) {
	const char *t = s;
	
#line 61 "<stdout>"
{
	char yych;
	yych = *t;
	switch (yych) {
	case 0x00:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case ' ':	goto yy9;
	default:	goto yy11;
	}
yy9:
	++t;
#line 30 "split.re"
	{ return 0; }
#line 79 "<stdout>"
yy11:
	yych = *++t;
	switch (yych) {
	case 0x00:
	case '\t':
	case '\n':
	case '\v':
	case '\f':
	case '\r':
	case ' ':	goto yy13;
	default:	goto yy11;
	}
yy13:
#line 31 "split.re"
	{ return t; }
#line 95 "<stdout>"
}
#line 32 "split.re"

}
