cursor: Identifies a unique element or null:
array: { array, i }
list: element
pool: { pool, i0 }
table: { table, i }
tree: { node, i }
trie: { tree, i }

iterator: Also has all the information for iteration, and optionally, visiting, insertion, deletion.
array: { cursor, seen }
list: { cursor, seen }
pool: cursor (only i0)
table: { cursor, seen }
tree: { tree, it, seen }
trie: { trie, it, seen }

iterators start here
v
|0|1|2|3|4|5|6|7|
                ^
end here


iterator -> begin

iterator begin()
[iterator end()]
int cursor(it, *key[, *value])
void next(it)
[void previous(it)]

